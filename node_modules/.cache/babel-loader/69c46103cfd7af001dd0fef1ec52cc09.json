{"ast":null,"code":"var _jsxFileName = \"/home/tonybsilva/\\xC1rea de Trabalho/Barber-App/frontend/src/components/Input/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState, useCallback } from 'react';\nimport { Container } from './styles';\nimport { useField } from '@unform/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Input = ({\n  name,\n  icon: Icon,\n  ...rest\n}) => {\n  _s();\n\n  const inputRef = useRef(null);\n  const [isFocused, setIsFocused] = useState(false);\n  const [isFilled, setIsFilled] = useState(false);\n  const [isErrored, setIsErrored] = useState(false);\n  const {\n    fieldName,\n    defaultValue,\n    error,\n    registerField\n  } = useField(name);\n  const handleInputBlur = useCallback(() => {\n    var _inputRef$current;\n\n    setIsFocused(false);\n    setIsFilled(!!((_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.value));\n  }, []);\n  const handleInputFocus = useCallback(() => {\n    setIsFocused(true);\n  }, []);\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: inputRef.current,\n      path: 'value'\n    });\n  }, [fieldName, registerField]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    isErrored: !!error,\n    isFilled: isFilled,\n    isFocused: isFocused,\n    children: [Icon && /*#__PURE__*/_jsxDEV(Icon, {\n      size: 20\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      defaultValue: defaultValue,\n      ref: inputRef,\n      onFocus: handleInputFocus,\n      onBlur: handleInputBlur,\n      ...rest\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Input, \"hcBh7uSb2QAPC3oskFKbTP/4Hu0=\", false, function () {\n  return [useField];\n});\n\n_c = Input;\nexport default Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["/home/tonybsilva/√Årea de Trabalho/Barber-App/frontend/src/components/Input/index.tsx"],"names":["React","useEffect","useRef","useState","useCallback","Container","useField","Input","name","icon","Icon","rest","inputRef","isFocused","setIsFocused","isFilled","setIsFilled","isErrored","setIsErrored","fieldName","defaultValue","error","registerField","handleInputBlur","current","value","handleInputFocus","ref","path"],"mappings":";;;AAAA,OAAOA,KAAP,IAAqCC,SAArC,EAAgDC,MAAhD,EAAwDC,QAAxD,EAAkEC,WAAlE,QAAqF,OAArF;AAEA,SAASC,SAAT,QAA0B,UAA1B;AACA,SAASC,QAAT,QAAyB,cAAzB;;;AAOA,MAAMC,KAA2B,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,IAAI,EAAEC,IAAd;AAAoB,KAAGC;AAAvB,CAAD,KAAmC;AAAA;;AACrE,QAAMC,QAAQ,GAAGV,MAAM,CAAmB,IAAnB,CAAvB;AACA,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACc,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM;AAAEgB,IAAAA,SAAF;AAAaC,IAAAA,YAAb;AAA2BC,IAAAA,KAA3B;AAAkCC,IAAAA;AAAlC,MAAoDhB,QAAQ,CAACE,IAAD,CAAlE;AAEA,QAAMe,eAAe,GAAGnB,WAAW,CAAC,MAAM;AAAA;;AACxCU,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,IAAAA,WAAW,CAAE,CAAC,uBAAEJ,QAAQ,CAACY,OAAX,sDAAE,kBAAkBC,KAApB,CAAH,CAAX;AACD,GAHkC,EAGhC,EAHgC,CAAnC;AAKA,QAAMC,gBAAgB,GAAGtB,WAAW,CAAC,MAAM;AACzCU,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAFmC,EAEjC,EAFiC,CAApC;AAIAb,EAAAA,SAAS,CAAC,MAAM;AACdqB,IAAAA,aAAa,CAAC;AACZd,MAAAA,IAAI,EAAEW,SADM;AAEZQ,MAAAA,GAAG,EAAEf,QAAQ,CAACY,OAFF;AAGZI,MAAAA,IAAI,EAAE;AAHM,KAAD,CAAb;AAKD,GANQ,EAMN,CAACT,SAAD,EAAYG,aAAZ,CANM,CAAT;AAQA,sBACE,QAAC,SAAD;AAAW,IAAA,SAAS,EAAE,CAAC,CAACD,KAAxB;AAA+B,IAAA,QAAQ,EAAEN,QAAzC;AAAmD,IAAA,SAAS,EAAEF,SAA9D;AAAA,eACIH,IAAI,iBAAI,QAAC,IAAD;AAAM,MAAA,IAAI,EAAE;AAAZ;AAAA;AAAA;AAAA;AAAA,YADZ,eAEE;AACE,MAAA,YAAY,EAAEU,YADhB;AAEE,MAAA,GAAG,EAAER,QAFP;AAGE,MAAA,OAAO,EAAEc,gBAHX;AAIE,MAAA,MAAM,EAAEH,eAJV;AAAA,SAKMZ;AALN;AAAA;AAAA;AAAA;AAAA,YAFF,EAQKU,KARL;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CApCD;;GAAMd,K;UAKsDD,Q;;;KALtDC,K;AAsCN,eAAeA,KAAf","sourcesContent":["import React, { InputHTMLAttributes, useEffect, useRef, useState, useCallback } from 'react';\nimport { IconBaseProps } from 'react-icons'\nimport { Container } from './styles';\nimport { useField } from '@unform/core'\n\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n  name: string;\n  icon?: React.ComponentType<IconBaseProps>;\n}\n\nconst Input: React.FC<InputProps> = ({ name, icon: Icon, ...rest }) => {\n  const inputRef = useRef<HTMLInputElement>(null)\n  const [isFocused, setIsFocused] = useState(false)\n  const [isFilled, setIsFilled] = useState(false)\n  const [isErrored, setIsErrored] = useState(false)\n  const { fieldName, defaultValue, error, registerField } = useField(name)\n\n  const handleInputBlur = useCallback(() => {\n    setIsFocused(false)\n    setIsFilled( !! inputRef.current?.value);\n  }, [])\n\n  const handleInputFocus = useCallback(() => {\n    setIsFocused(true)\n  }, [])\n\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: inputRef.current,\n      path: 'value'\n    })\n  }, [fieldName, registerField])\n\n  return (\n    <Container isErrored={!!error} isFilled={isFilled} isFocused={isFocused} >\n      { Icon && <Icon size={20} />}\n      <input\n        defaultValue={defaultValue}\n        ref={inputRef}\n        onFocus={handleInputFocus}\n        onBlur={handleInputBlur}\n        {...rest} />\n        {error}\n    </Container>\n  )\n}\n\nexport default Input;\n"]},"metadata":{},"sourceType":"module"}