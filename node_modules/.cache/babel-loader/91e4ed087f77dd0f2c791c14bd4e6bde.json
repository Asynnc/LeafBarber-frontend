{"ast":null,"code":"var _jsxFileName = \"/home/tonybsilva/\\xC1rea de Trabalho/Leaf-Barber/frontend/src/components/ToastContainer/Toast/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { FiAlertCircle, FiXCircle, FiCheckCircle, FiInfo } from 'react-icons/fi';\nimport { Container } from './styles';\nimport { useToast } from '../../../hooks/ToastContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst icons = {\n  info: /*#__PURE__*/_jsxDEV(FiInfo, {\n    size: 24\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this),\n  error: /*#__PURE__*/_jsxDEV(FiAlertCircle, {\n    size: 24\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 10\n  }, this),\n  success: /*#__PURE__*/_jsxDEV(FiCheckCircle, {\n    size: 24\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 12\n  }, this)\n};\n\nconst Toast = ({\n  item\n}) => {\n  _s();\n\n  const {\n    removeToast\n  } = useToast(); // Remover automaticamente os toasts após 3 segundos\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      removeToast(item.id);\n    }, 3000);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [item.id, removeToast]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    type: item.type,\n    hasDescription: !!item.description,\n    children: [icons[item.type || 'info'], /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: item.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), item.description && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: item.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => removeToast(item.id),\n      type: \"button\",\n      children: /*#__PURE__*/_jsxDEV(FiXCircle, {\n        size: 18\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Toast, \"cVj1SZxNljqa99jAg6KZVb19d6w=\", false, function () {\n  return [useToast];\n});\n\n_c = Toast;\nexport default Toast;\n\nvar _c;\n\n$RefreshReg$(_c, \"Toast\");","map":{"version":3,"sources":["/home/tonybsilva/Área de Trabalho/Leaf-Barber/frontend/src/components/ToastContainer/Toast/index.tsx"],"names":["React","useEffect","FiAlertCircle","FiXCircle","FiCheckCircle","FiInfo","Container","useToast","icons","info","error","success","Toast","item","removeToast","timer","setTimeout","id","clearTimeout","type","description","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAT,EAAwBC,SAAxB,EAAmCC,aAAnC,EAAkDC,MAAlD,QAAgE,gBAAhE;AACA,SAASC,SAAT,QAA0B,UAA1B;AACA,SAAuBC,QAAvB,QAAuC,6BAAvC;;AAOA,MAAMC,KAAK,GAAG;AACZC,EAAAA,IAAI,eAAE,QAAC,MAAD;AAAQ,IAAA,IAAI,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,UADM;AAEZC,EAAAA,KAAK,eAAE,QAAC,aAAD;AAAe,IAAA,IAAI,EAAE;AAArB;AAAA;AAAA;AAAA;AAAA,UAFK;AAGZC,EAAAA,OAAO,eAAE,QAAC,aAAD;AAAe,IAAA,IAAI,EAAE;AAArB;AAAA;AAAA;AAAA;AAAA;AAHG,CAAd;;AAMA,MAAMC,KAA2B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAAA;;AAEhD,QAAM;AAAEC,IAAAA;AAAF,MAAkBP,QAAQ,EAAhC,CAFgD,CAIlD;;AACAN,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMc,KAAK,GAAGC,UAAU,CAAE,MAAM;AAC9BF,MAAAA,WAAW,CAACD,IAAI,CAACI,EAAN,CAAX;AACD,KAFuB,EAErB,IAFqB,CAAxB;AAIA,WAAO,MAAM;AACXC,MAAAA,YAAY,CAACH,KAAD,CAAZ;AACD,KAFD;AAID,GATQ,EASN,CAACF,IAAI,CAACI,EAAN,EAAUH,WAAV,CATM,CAAT;AAWE,sBACE,QAAC,SAAD;AACA,IAAA,IAAI,EAAED,IAAI,CAACM,IADX;AAEA,IAAA,cAAc,EAAE,CAAC,CAACN,IAAI,CAACO,WAFvB;AAAA,eAIGZ,KAAK,CAACK,IAAI,CAACM,IAAL,IAAa,MAAd,CAJR,eAME;AAAA,8BACE;AAAA,kBAASN,IAAI,CAACQ;AAAd;AAAA;AAAA;AAAA;AAAA,cADF,EAEGR,IAAI,CAACO,WAAL,iBAAoB;AAAA,kBAAIP,IAAI,CAACO;AAAT;AAAA;AAAA;AAAA;AAAA,cAFvB;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAWE;AAAQ,MAAA,OAAO,EAAE,MAAMN,WAAW,CAACD,IAAI,CAACI,EAAN,CAAlC;AAA6C,MAAA,IAAI,EAAC,QAAlD;AAAA,6BACE,QAAC,SAAD;AAAW,QAAA,IAAI,EAAE;AAAjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAjCD;;GAAML,K;UAEoBL,Q;;;KAFpBK,K;AAmCN,eAAeA,KAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { FiAlertCircle, FiXCircle, FiCheckCircle, FiInfo } from 'react-icons/fi'\nimport { Container } from './styles';\nimport { ToastMessage, useToast } from '../../../hooks/ToastContext'\n\ninterface ToastProps {\n  item: ToastMessage\n  style: object\n}\n\nconst icons = {\n  info: <FiInfo size={24}/>,\n  error: <FiAlertCircle size={24}/>,\n  success: <FiCheckCircle size={24}/>,\n}\n\nconst Toast: React.FC<ToastProps> = ({ item }) => {\n\n  const { removeToast } = useToast()\n\n// Remover automaticamente os toasts após 3 segundos\nuseEffect(() => {\n  const timer = setTimeout( () => {\n    removeToast(item.id);\n  }, 3000);\n\n  return () => {\n    clearTimeout(timer)\n  }\n\n}, [item.id, removeToast])\n\n  return (\n    <Container\n    type={item.type}\n    hasDescription={!!item.description}>\n\n      {icons[item.type || 'info']}\n\n      <div>\n        <strong>{item.title}</strong>\n        {item.description && <p>{item.description}</p>}\n      </div>\n\n      <button onClick={() => removeToast(item.id)} type=\"button\" >\n        <FiXCircle size={18} />\n      </button>\n    </Container>\n  )\n}\n\nexport default Toast;\n"]},"metadata":{},"sourceType":"module"}