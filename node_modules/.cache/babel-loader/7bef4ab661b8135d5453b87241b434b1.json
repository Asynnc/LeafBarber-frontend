{"ast":null,"code":"var _jsxFileName = \"/home/tonybsilva/\\xC1rea de Trabalho/Leaf-Barber/frontend/src/components/ToastContainer/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Container, Toast } from './styles';\nimport { useToast } from '../../hooks/ToastContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ToastContainer = ({\n  messages\n}) => {\n  _s();\n\n  const {\n    removeToast\n  } = useToast();\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: messages.map(item => /*#__PURE__*/_jsxDEV(Toast, {\n      toast: item\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ToastContainer, \"7rLaqBWl2r+Zx97eg5E2U91c6Vo=\", false, function () {\n  return [useToast];\n});\n\n_c = ToastContainer;\nexport default ToastContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToastContainer\");","map":{"version":3,"sources":["/home/tonybsilva/√Årea de Trabalho/Leaf-Barber/frontend/src/components/ToastContainer/index.tsx"],"names":["React","Container","Toast","useToast","ToastContainer","messages","removeToast","map","item","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,UAAjC;AACA,SAAuBC,QAAvB,QAAuC,0BAAvC;;;AAMA,MAAMC,cAA6C,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAEtE,QAAM;AAAEC,IAAAA;AAAF,MAAkBH,QAAQ,EAAhC;AAEA,sBACE,QAAC,SAAD;AAAA,cAEGE,QAAQ,CAACE,GAAT,CAAaC,IAAI,iBAChB,QAAC,KAAD;AAEE,MAAA,KAAK,EAAEA;AAFT,OACOA,IAAI,CAACC,EADZ;AAAA;AAAA;AAAA;AAAA,YADD;AAFH;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAfD;;GAAML,c;UAEoBD,Q;;;KAFpBC,c;AAiBN,eAAeA,cAAf","sourcesContent":["import React from 'react';\n\nimport { Container, Toast } from './styles';\nimport { ToastMessage, useToast } from '../../hooks/ToastContext'\n\ninterface ToastContainerProps {\n  messages: ToastMessage[]\n}\n\nconst ToastContainer: React.FC<ToastContainerProps> = ({ messages }) => {\n\n  const { removeToast } = useToast()\n\n  return (\n    <Container >\n\n      {messages.map(item => (\n        <Toast\n          key={item.id}\n          toast={item}>\n        </Toast>\n      ))}\n    </Container>\n  );\n}\n\nexport default ToastContainer;\n"]},"metadata":{},"sourceType":"module"}