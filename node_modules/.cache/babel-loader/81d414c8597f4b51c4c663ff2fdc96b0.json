{"ast":null,"code":"var _jsxFileName = \"/home/tonybsilva/\\xC1rea de Trabalho/Leaf-Barber/frontend/src/context/AuthContext.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useCallback, useState } from 'react';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext({});\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n\n  const [data, setData] = useState({});\n  const signIn = useCallback(async ({\n    email,\n    password\n  }) => {\n    //Para fazermos a autenticação precisamos receber as credenciais\n    const response = await api.post('/sessions', {\n      email,\n      password\n    });\n    const {\n      token,\n      user\n    } = response.data;\n    localStorage.setItem('@LeafBarber:token', token);\n    localStorage.setItem('@LeafBarber:user', JSON.stringify(user));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      name: 'Tony',\n      signIn\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthProvider, \"tkpETw3p8QVUZC/BAb+F7EeoppY=\");\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/home/tonybsilva/Área de Trabalho/Leaf-Barber/frontend/src/context/AuthContext.tsx"],"names":["React","createContext","useCallback","useState","api","AuthContext","AuthProvider","children","data","setData","signIn","email","password","response","post","token","user","localStorage","setItem","JSON","stringify","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,WAA/B,EAA4CC,QAA5C,QAA4D,OAA5D;AACA,OAAOC,GAAP,MAAgB,iBAAhB;;AAiBA,OAAO,MAAMC,WAAW,gBAAGJ,aAAa,CAAkB,EAAlB,CAAjC;AAEP,OAAO,MAAMK,YAAsB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAEtD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAMO,MAAM,GAAGR,WAAW,CAAC,OAAO;AAAES,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAP,KAA+B;AACxD;AACA,UAAMC,QAAQ,GAAG,MAAMT,GAAG,CAACU,IAAJ,CAAS,WAAT,EAAsB;AAC3CH,MAAAA,KAD2C;AAE3CC,MAAAA;AAF2C,KAAtB,CAAvB;AAMA,UAAM;AAAEG,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAkBH,QAAQ,CAACL,IAAjC;AAEAS,IAAAA,YAAY,CAACC,OAAb,CAAqB,mBAArB,EAA0CH,KAA1C;AACAE,IAAAA,YAAY,CAACC,OAAb,CAAqB,kBAArB,EAAyCC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAAzC;AAED,GAbyB,EAavB,EAbuB,CAA1B;AAgBA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEK,MAAAA,IAAI,EAAE,MAAR;AAAgBX,MAAAA;AAAhB,KAA7B;AAAA,cACGH;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAzBM;;GAAMD,Y;;KAAAA,Y","sourcesContent":["import React, { createContext, useCallback, useState } from 'react'\nimport api from '../services/api'\n\ninterface AuthState {\n  token: string;\n  user: object\n}\n\ninterface SignInCredenticals {\n  email: string;\n  password: string;\n}\n\ninterface AuthContextData {\n  name: string;\n  signIn(credentials: SignInCredenticals): Promise<void>\n}\n\nexport const AuthContext = createContext<AuthContextData>({} as AuthContextData)\n\nexport const AuthProvider: React.FC = ({ children }) => {\n\n  const [data, setData] = useState({})\n\n  const signIn = useCallback(async ({ email, password }) => {\n    //Para fazermos a autenticação precisamos receber as credenciais\n    const response = await api.post('/sessions', {\n      email,\n      password\n    })\n\n\n    const { token, user } = response.data\n\n    localStorage.setItem('@LeafBarber:token', token)\n    localStorage.setItem('@LeafBarber:user', JSON.stringify(user))\n\n  }, [])\n\n\n  return (\n    <AuthContext.Provider value={{ name: 'Tony', signIn }}>\n      {children}\n    </AuthContext.Provider>\n  )\n}\n\n"]},"metadata":{},"sourceType":"module"}