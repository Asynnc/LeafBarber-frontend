{"ast":null,"code":"var _jsxFileName = \"/home/tonybsilva/\\xC1rea de Trabalho/Leaf-Barber/frontend/src/components/ToastContainer/Toast/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { FiAlertCircle, FiXCircle } from 'react-icons/fi';\nimport { Container } from './styles';\nimport { useToast } from '../../../hooks/ToastContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Toast = ({\n  item\n}) => {\n  _s();\n\n  const {\n    removeToast\n  } = useToast();\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      removeToast(item.id);\n    }, 3000);\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    type: item.type,\n    hasDescription: !!item.description,\n    children: [/*#__PURE__*/_jsxDEV(FiAlertCircle, {\n      size: 20\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: item.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), item.description && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: item.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => removeToast(item.id),\n      type: \"button\",\n      children: /*#__PURE__*/_jsxDEV(FiXCircle, {\n        size: 18\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Toast, \"cVj1SZxNljqa99jAg6KZVb19d6w=\", false, function () {\n  return [useToast];\n});\n\n_c = Toast;\nexport default Toast;\n\nvar _c;\n\n$RefreshReg$(_c, \"Toast\");","map":{"version":3,"sources":["/home/tonybsilva/√Årea de Trabalho/Leaf-Barber/frontend/src/components/ToastContainer/Toast/index.tsx"],"names":["React","useEffect","FiAlertCircle","FiXCircle","Container","useToast","Toast","item","removeToast","timer","setTimeout","id","type","description","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAT,EAAwBC,SAAxB,QAAyC,gBAAzC;AACA,SAASC,SAAT,QAA0B,UAA1B;AACA,SAAuBC,QAAvB,QAAuC,6BAAvC;;;AAMA,MAAMC,KAA2B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAAA;;AAEhD,QAAM;AAAEC,IAAAA;AAAF,MAAkBH,QAAQ,EAAhC;AAEFJ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,KAAK,GAAGC,UAAU,CAAE,MAAM;AAC9BF,MAAAA,WAAW,CAACD,IAAI,CAACI,EAAN,CAAX;AACD,KAFuB,EAErB,IAFqB,CAAxB;AAGD,GAJQ,CAAT;AAME,sBACE,QAAC,SAAD;AACA,IAAA,IAAI,EAAEJ,IAAI,CAACK,IADX;AAEA,IAAA,cAAc,EAAE,CAAC,CAACL,IAAI,CAACM,WAFvB;AAAA,4BAIE,QAAC,aAAD;AAAe,MAAA,IAAI,EAAE;AAArB;AAAA;AAAA;AAAA;AAAA,YAJF,eAME;AAAA,8BACE;AAAA,kBAASN,IAAI,CAACO;AAAd;AAAA;AAAA;AAAA;AAAA,cADF,EAEGP,IAAI,CAACM,WAAL,iBAAoB;AAAA,kBAAIN,IAAI,CAACM;AAAT;AAAA;AAAA;AAAA;AAAA,cAFvB;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAWE;AAAQ,MAAA,OAAO,EAAE,MAAML,WAAW,CAACD,IAAI,CAACI,EAAN,CAAlC;AAA6C,MAAA,IAAI,EAAC,QAAlD;AAAA,6BACE,QAAC,SAAD;AAAW,QAAA,IAAI,EAAE;AAAjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CA3BD;;GAAML,K;UAEoBD,Q;;;KAFpBC,K;AA6BN,eAAeA,KAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { FiAlertCircle, FiXCircle } from 'react-icons/fi'\nimport { Container } from './styles';\nimport { ToastMessage, useToast } from '../../../hooks/ToastContext'\n\ninterface ToastProps {\n  item: ToastMessage\n}\n\nconst Toast: React.FC<ToastProps> = ({ item }) => {\n\n  const { removeToast } = useToast()\n\nuseEffect(() => {\n  const timer = setTimeout( () => {\n    removeToast(item.id);\n  }, 3000)\n})\n\n  return (\n    <Container\n    type={item.type}\n    hasDescription={!!item.description}>\n\n      <FiAlertCircle size={20} />\n\n      <div>\n        <strong>{item.title}</strong>\n        {item.description && <p>{item.description}</p>}\n      </div>\n\n      <button onClick={() => removeToast(item.id)} type=\"button\" >\n        <FiXCircle size={18} />\n      </button>\n    </Container>\n  )\n}\n\nexport default Toast;\n"]},"metadata":{},"sourceType":"module"}